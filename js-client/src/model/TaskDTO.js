/**
 * 时间管理系统-swagger接口测试工具
 * SpringBoot3 集成 Swagger3接口文档
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TaskDTO model module.
 * @module model/TaskDTO
 * @version v1
 */
class TaskDTO {
    /**
     * Constructs a new <code>TaskDTO</code>.
     * @alias module:model/TaskDTO
     */
    constructor() { 
        
        TaskDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskDTO} obj Optional instance to populate.
     * @return {module:model/TaskDTO} The populated <code>TaskDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskDTO();

            if (data.hasOwnProperty('taskId')) {
                obj['taskId'] = ApiClient.convertToType(data['taskId'], 'Number');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('p')) {
                obj['p'] = ApiClient.convertToType(data['p'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('dateTime')) {
                obj['dateTime'] = ApiClient.convertToType(data['dateTime'], ['String']);
            }
            if (data.hasOwnProperty('createTime')) {
                obj['createTime'] = ApiClient.convertToType(data['createTime'], 'Number');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['p'] && !(typeof data['p'] === 'string' || data['p'] instanceof String)) {
            throw new Error("Expected the field `p` to be a primitive type in the JSON string but got " + data['p']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['dateTime'])) {
            throw new Error("Expected the field `dateTime` to be an array in the JSON data but got " + data['dateTime']);
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }

        return true;
    }


}



/**
 * @member {Number} taskId
 */
TaskDTO.prototype['taskId'] = undefined;

/**
 * @member {Number} userId
 */
TaskDTO.prototype['userId'] = undefined;

/**
 * @member {String} text
 */
TaskDTO.prototype['text'] = undefined;

/**
 * @member {String} p
 */
TaskDTO.prototype['p'] = undefined;

/**
 * @member {String} description
 */
TaskDTO.prototype['description'] = undefined;

/**
 * @member {Array.<String>} dateTime
 */
TaskDTO.prototype['dateTime'] = undefined;

/**
 * @member {Number} createTime
 */
TaskDTO.prototype['createTime'] = undefined;

/**
 * @member {String} tag
 */
TaskDTO.prototype['tag'] = undefined;






export default TaskDTO;

